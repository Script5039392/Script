local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\205\111","\108\227\65\98\85\141\160\62"),function(v42) if (v9(v42,2)==79) then local v101=0;while true do if (0==v101) then v30=v8(v11(v42,2 -1 ,1));return "";end end else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,16));if v30 then local v124=0;local v125;while true do if (v124==1) then return v125;end if (v124==0) then v125=v13(v103,v30);v30=nil;v124=1;end end else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=(v43/(2^(v44-(1 + 0))))%(2^(((v45-(3 -2)) -(v44-1)) + 1)) ;return v104-(v104%1) ;else local v105=0;local v106;while true do if (v105==0) then v106=(5 -3)^(v44-1) ;return (((v43%(v106 + v106))>=v106) and (1 -0)) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==0) then v48,v49=v9(v27,v29,v29 + (4 -2) );v29=v29 + 2 ;v47=1;end if (v47==1) then return (v49 * 256) + v48 ;end end end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end end end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==2) then v60=v31(v57,21,650 -(555 + 64) );v61=((v31(v57,32)==1) and  -1) or (1 + 0) ;v55=3;end if (v55==3) then if (v60==0) then if (v59==0) then return v61 * 0 ;else local v126=0;while true do if (v126==0) then v60=1 + 0 ;v58=931 -(857 + 74) ;break;end end end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==1) then v58=1;v59=(v31(v57,1,879 -(814 + 45) ) * (2^32)) + v56 ;v55=2;end end end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==1) then v64=v11(v27,v29,(v29 + v62) -(569 -(367 + 201)) );v29=v29 + v62 ;v63=2;end if (v63==0) then v64=nil;if  not v62 then local v120=0;while true do if (v120==0) then v62=v34();if (v62==0) then return "";end break;end end end v63=1;end if (v63==3) then return v14(v65);end if (v63==2) then v65={};for v113=928 -(214 + 713) , #v64 do v65[v113]=v10(v9(v11(v64,v113,v113)));end v63=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66={};local v67={};local v68={};local v69={v66,v67,nil,v68};local v70=v34();local v71={};for v79=886 -(261 + 624) ,v70 do local v80=0;local v81;local v82;while true do if (v80==0) then v81=v32();v82=nil;v80=1;end if (v80==1) then if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==(4 -1)) then v82=v36();end v71[v79]=v82;break;end end end v69[3]=v32();for v83=1,v34() do local v84=v32();if (v31(v84,1081 -(1020 + 60) ,1424 -(630 + 793) )==0) then local v109=0;local v110;local v111;local v112;while true do if (3==v109) then if (v31(v111,1750 -(760 + 987) ,1916 -(1789 + 124) )==1) then v112[4]=v71[v112[4]];end v66[v83]=v112;break;end if (v109==0) then v110=v31(v84,2,9 -6 );v111=v31(v84,4,6);v109=1;end if (v109==1) then v112={v33(),v33(),nil,nil};if (v110==0) then local v129=0;while true do if (0==v129) then v112[3]=v33();v112[4]=v33();break;end end elseif (v110==1) then v112[1 + 2 ]=v34();elseif (v110==2) then v112[3]=v34() -(2^16) ;elseif (v110==3) then local v138=0;while true do if (v138==0) then v112[3]=v34() -(2^16) ;v112[4]=v33();break;end end end v109=2;end if (2==v109) then if (v31(v111,1 + 0 ,1)==1) then v112[2]=v71[v112[2]];end if (v31(v111,2,2)==(3 -2)) then v112[880 -(282 + 595) ]=v71[v112[3]];end v109=3;end end end end for v85=1638 -(1523 + 114) ,v34() do v67[v85-1 ]=v39();end return v69;end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[3];return function(...) local v87=v76;local v88=v77;local v89=v78;local v90=v38;local v91=1;local v92= -(1 + 0);local v93={};local v94={...};local v95=v20("#",...) -1 ;local v96={};local v97={};for v107=0 + 0 ,v95 do if (v107>=v89) then v93[v107-v89 ]=v94[v107 + 1 ];else v97[v107]=v94[v107 + 1 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do local v108=0;while true do if (0==v108) then v99=v87[v91];v100=v99[1];v108=1;end if (v108==1) then if (v100<=42) then if (v100<=20) then if (v100<=9) then if (v100<=(5 -1)) then if (v100<=(1066 -(68 + 997))) then if (v100==(1270 -(226 + 1044))) then v97[v99[2]]=v74[v99[3]];else v97[v99[2]]=v97[v99[3]]%v97[v99[17 -13 ]] ;end elseif (v100<=2) then if v97[v99[119 -(32 + 85) ]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>3) then local v236=0;local v237;local v238;while true do if (v236==0) then v237=v99[3];v238=v97[v237];v236=1;end if (v236==1) then for v396=v237 + 1 ,v99[4] do v238=v238   .. v97[v396] ;end v97[v99[2]]=v238;break;end end else local v239=0;local v240;while true do if (v239==0) then v240=v99[2];v97[v240]=v97[v240](v21(v97,v240 + 1 ,v99[3]));break;end end end elseif (v100<=6) then if (v100>5) then v97[v99[2]]=v97[v99[3]]%v99[4] ;else v97[v99[2]]=v75[v99[3]];end elseif (v100<=(7 + 0)) then v97[v99[2]]=v97[v99[3]][v99[4]];elseif (v100==(2 + 6)) then local v241=0;local v242;while true do if (v241==0) then v242=v99[2];do return v21(v97,v242,v92);end break;end end else local v243=0;local v244;local v245;local v246;while true do if (v243==2) then for v397=1,v99[4] do local v398=0;local v399;while true do if (1==v398) then if (v399[1]==29) then v246[v397-(1 + 0) ]={v97,v399[3]};else v246[v397-1 ]={v74,v399[3]};end v96[ #v96 + 1 ]=v246;break;end if (v398==0) then v91=v91 + 1 ;v399=v87[v91];v398=1;end end end v97[v99[2]]=v40(v244,v245,v75);break;end if (v243==0) then v244=v88[v99[3]];v245=nil;v243=1;end if (v243==1) then v246={};v245=v18({},{[v7("\218\19\55\205\210\165\237","\149\133\76\94\163\182\192")]=function(v400,v401) local v402=v246[v401];return v402[1][v402[2]];end,[v7("\25\202\58\35\23\38\40\241\49\62","\79\70\149\84\70\96")]=function(v403,v404,v405) local v406=0;local v407;while true do if (0==v406) then v407=v246[v404];v407[1][v407[1 + 1 ]]=v405;break;end end end});v243=2;end end end elseif (v100<=14) then if (v100<=11) then if (v100==10) then v97[v99[2]]=v99[3];else local v151=0;local v152;local v153;while true do if (v151==1) then for v353=v152 + 1 ,v99[9 -5 ] do v153=v153   .. v97[v353] ;end v97[v99[2]]=v153;break;end if (0==v151) then v152=v99[3];v153=v97[v152];v151=1;end end end elseif (v100<=(21 -9)) then local v154=0;local v155;while true do if (0==v154) then v155=v99[2];v97[v155](v21(v97,v155 + 1 ,v99[3]));break;end end elseif (v100==(1068 -(87 + 968))) then v97[v99[2]]={};else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=17) then if (v100<=15) then local v156=0;local v157;local v158;while true do if (v156==0) then v157=v99[8 -6 ];v158=v97[v99[3]];v156=1;end if (v156==1) then v97[v157 + 1 ]=v158;v97[v157]=v158[v99[4]];break;end end elseif (v100>16) then v97[v99[2]][v97[v99[3]]]=v99[4];else v97[v99[2]][v99[4 -1 ]]=v97[v99[354 -(87 + 263) ]];end elseif (v100<=18) then do return v97[v99[2]]();end elseif (v100==19) then local v253=0;local v254;while true do if (v253==0) then v254=v99[2];v97[v254](v97[v254 + 1 + 0 ]);break;end end else local v255=0;local v256;local v257;local v258;local v259;while true do if (v255==0) then v256=v99[2];v257,v258=v90(v97[v256](v21(v97,v256 + 1 ,v92)));v255=1;end if (1==v255) then v92=(v258 + v256) -1 ;v259=0;v255=2;end if (v255==2) then for v408=v256,v92 do v259=v259 + (2 -1) ;v97[v408]=v257[v259];end break;end end end elseif (v100<=31) then if (v100<=(205 -(67 + 113))) then if (v100<=22) then if (v100==21) then local v159=0;local v160;local v161;local v162;while true do if (v159==2) then if (v161>0) then if (v162<=v97[v160 + 1 ]) then local v417=0;while true do if (v417==0) then v91=v99[3];v97[v160 + 3 ]=v162;break;end end end elseif (v162>=v97[v160 + 1 ]) then v91=v99[3];v97[v160 + 3 + 0 ]=v162;end break;end if (0==v159) then v160=v99[2];v161=v97[v160 + 2 ];v159=1;end if (v159==1) then v162=v97[v160] + v161 ;v97[v160]=v162;v159=2;end end else for v214=v99[2],v99[1416 -(447 + 966) ] do v97[v214]=nil;end end elseif (v100<=(62 -39)) then v91=v99[3];elseif (v100>24) then v91=v99[7 -4 ];else v97[v99[2]]=v97[v99[3]] + v99[4] ;end elseif (v100<=28) then if (v100<=26) then for v216=v99[2],v99[3] do v97[v216]=nil;end elseif (v100==27) then local v262=0;local v263;while true do if (v262==0) then v263=v99[2 + 0 ];v97[v263]=v97[v263](v97[v263 + 1 ]);break;end end else local v264=0;local v265;local v266;local v267;while true do if (v264==0) then v265=v99[2];v266=v97[v265];v264=1;end if (v264==1) then v267=v97[v265 + 2 ];if (v267>0) then if (v266>v97[v265 + 1 ]) then v91=v99[3];else v97[v265 + 3 ]=v266;end elseif (v266<v97[v265 + 1 ]) then v91=v99[3];else v97[v265 + 3 ]=v266;end break;end end end elseif (v100<=29) then v97[v99[2]]=v97[v99[3]];elseif (v100==30) then v97[v99[7 -5 ]]= #v97[v99[955 -(802 + 150) ]];else local v269=0;local v270;local v271;local v272;local v273;while true do if (v269==1) then v92=(v272 + v270) -(2 -1) ;v273=0;v269=2;end if (v269==2) then for v411=v270,v92 do local v412=0;while true do if (v412==0) then v273=v273 + 1 ;v97[v411]=v271[v273];break;end end end break;end if (v269==0) then v270=v99[2];v271,v272=v90(v97[v270](v21(v97,v270 + 1 ,v99[3])));v269=1;end end end elseif (v100<=(1853 -(1703 + 114))) then if (v100<=33) then if (v100>32) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else local v166=0;local v167;while true do if (v166==0) then v167=v99[703 -(376 + 325) ];do return v21(v97,v167,v92);end break;end end end elseif (v100<=34) then local v168=v99[2];local v169,v170=v90(v97[v168](v21(v97,v168 + 1 ,v92)));v92=(v170 + v168) -1 ;local v171=0;for v218=v168,v92 do v171=v171 + (1 -0) ;v97[v218]=v169[v171];end elseif (v100==35) then local v275=0;local v276;while true do if (v275==0) then v276=v99[3 -1 ];v97[v276]=v97[v276](v21(v97,v276 + 1 ,v99[3]));break;end end else v97[v99[2]]=v97[v99[3]]%v99[4] ;end elseif (v100<=39) then if (v100<=37) then v97[v99[2]][v99[3]]=v97[v99[4]];elseif (v100==(116 -78)) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[1 + 2 ];end else v97[v99[2]]=v97[v99[3]];end elseif (v100<=40) then if (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>41) then v97[v99[2]]=v99[3]~=0 ;else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=63) then if (v100<=(114 -62)) then if (v100<=(35 + 12)) then if (v100<=44) then if (v100==(1040 -(915 + 82))) then local v174=0;local v175;local v176;while true do if (v174==1) then v97[v175 + (1266 -(243 + 1022)) ]=v176;v97[v175]=v176[v99[14 -10 ]];break;end if (v174==0) then v175=v99[378 -(85 + 291) ];v176=v97[v99[3]];v174=1;end end else local v177=0;local v178;local v179;while true do if (0==v177) then v178=v99[5 -3 ];v179=v97[v178];v177=1;end if (v177==1) then for v355=v178 + 1 ,v92 do v15(v179,v97[v355]);end break;end end end elseif (v100<=45) then v97[v99[2]]();elseif (v100==(27 + 19)) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else local v283=v99[2];do return v97[v283](v21(v97,v283 + 1 ,v99[3]));end end elseif (v100<=49) then if (v100==48) then local v180=0;local v181;while true do if (v180==0) then v181=v99[2 -0 ];v97[v181](v21(v97,v181 + 1 ,v99[3]));break;end end else do return v97[v99[2]]();end end elseif (v100<=50) then do return;end elseif (v100==51) then if (v99[2]==v97[v99[1184 -(1123 + 57) ]]) then v91=v91 + 1 ;else v91=v99[3];end else local v284=0;local v285;while true do if (0==v284) then v285=v99[2];v97[v285](v21(v97,v285 + 1 ,v92));break;end end end elseif (v100<=57) then if (v100<=(44 + 10)) then if (v100==53) then local v182=0;local v183;local v184;local v185;local v186;while true do if (v182==1) then v92=(v185 + v183) -1 ;v186=0;v182=2;end if (v182==2) then for v358=v183,v92 do local v359=0;while true do if (v359==0) then v186=v186 + 1 ;v97[v358]=v184[v186];break;end end end break;end if (v182==0) then v183=v99[256 -(163 + 91) ];v184,v185=v90(v97[v183](v97[v183 + (1931 -(1869 + 61)) ]));v182=1;end end elseif v97[v99[2]] then v91=v91 + 1 + 0 ;else v91=v99[3];end elseif (v100<=(1242 -(1069 + 118))) then v97[v99[2]][v97[v99[3]]]=v99[4];elseif (v100>56) then local v287=0;local v288;while true do if (v287==0) then v288=v99[2];v97[v288]=v97[v288](v97[v288 + 1 ]);break;end end else v97[v99[4 -2 ]]();end elseif (v100<=60) then if (v100<=(204 -146)) then v97[v99[2]][v99[3]]=v99[4];elseif (v100>59) then v75[v99[3]]=v97[v99[2]];else local v291=v99[2 -0 ];local v292,v293=v90(v97[v291](v21(v97,v291 + 1 ,v99[3])));v92=(v293 + v291) -1 ;local v294=0;for v344=v291,v92 do local v345=0;while true do if (v345==0) then v294=v294 + 1 ;v97[v344]=v292[v294];break;end end end end elseif (v100<=61) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];elseif (v100==62) then v75[v99[3]]=v97[v99[2]];else v97[v99[2]]=v97[v99[3]][v99[4]];end elseif (v100<=74) then if (v100<=68) then if (v100<=(142 -77)) then if (v100>64) then do return;end else v97[v99[2]]=v99[3] + v97[v99[4]] ;end elseif (v100<=66) then local v194=0;local v195;while true do if (v194==0) then v195=v99[2];v97[v195]=v97[v195](v21(v97,v195 + 1 ,v92));break;end end elseif (v100>67) then local v299=0;local v300;local v301;local v302;while true do if (v299==1) then v302=v97[v300] + v301 ;v97[v300]=v302;v299=2;end if (v299==0) then v300=v99[2];v301=v97[v300 + 2 ];v299=1;end if (v299==2) then if (v301>0) then if (v302<=v97[v300 + (1 -0) ]) then local v432=0;while true do if (v432==0) then v91=v99[3];v97[v300 + 3 ]=v302;break;end end end elseif (v302>=v97[v300 + 1 ]) then local v433=0;while true do if (v433==0) then v91=v99[3 + 0 ];v97[v300 + (1477 -(1329 + 145)) ]=v302;break;end end end break;end end else v97[v99[2]]=v74[v99[1 + 2 ]];end elseif (v100<=71) then if (v100<=69) then local v196=0;local v197;while true do if (v196==0) then v197=v99[2];v97[v197]=v97[v197](v21(v97,v197 + (1 -0) ,v92));break;end end elseif (v100==70) then if (v97[v99[2]]==v99[4 + 0 ]) then v91=v91 + 1 ;else v91=v99[794 -(368 + 423) ];end else local v305=0;local v306;while true do if (v305==0) then v306=v99[973 -(140 + 831) ];v97[v306](v21(v97,v306 + 1 ,v92));break;end end end elseif (v100<=72) then local v198=v99[6 -4 ];local v199,v200=v90(v97[v198](v97[v198 + 1 ]));v92=(v200 + v198) -(1851 -(1409 + 441)) ;local v201=718 -(15 + 703) ;for v221=v198,v92 do local v222=0;while true do if (0==v222) then v201=v201 + 1 ;v97[v221]=v199[v201];break;end end end elseif (v100==73) then v97[v99[2]]=v99[3] + v97[v99[4]] ;else v97[v99[2]]=v75[v99[3]];end elseif (v100<=79) then if (v100<=(36 + 40)) then if (v100>75) then local v202=v88[v99[21 -(10 + 8) ]];local v203;local v204={};v203=v18({},{[v7("\210\7\15\3\191\196\66","\58\141\88\102\109\219\161")]=function(v223,v224) local v225=0;local v226;while true do if (v225==0) then v226=v204[v224];return v226[3 -2 ][v226[2]];end end end,[v7("\245\79\20\56\66\64\38\87\207\104","\51\170\16\122\93\53\41\72")]=function(v227,v228,v229) local v230=v204[v228];v230[1][v230[2]]=v229;end});for v232=1,v99[446 -(416 + 26) ] do local v233=0;local v234;while true do if (v233==1) then if (v234[3 -2 ]==(13 + 16)) then v204[v232-1 ]={v97,v234[3]};else v204[v232-1 ]={v74,v234[441 -(262 + 176) ]};end v96[ #v96 + 1 ]=v204;break;end if (v233==0) then v91=v91 + 1 ;v234=v87[v91];v233=1;end end end v97[v99[440 -(145 + 293) ]]=v40(v202,v203,v75);else v97[v99[432 -(44 + 386) ]][v97[v99[3]]]=v97[v99[4]];end elseif (v100<=(1798 -(345 + 1376))) then local v208=0;local v209;local v210;while true do if (v208==0) then v209=v99[2];v210=v97[v209];v208=1;end if (v208==1) then for v366=v209 + 1 ,v92 do v15(v210,v97[v366]);end break;end end elseif (v100>(1564 -(998 + 488))) then v97[v99[1 + 1 ]]=v99[3];else local v312=0;local v313;local v314;local v315;while true do if (v312==1) then v315=v97[v313 + 2 ];if (v315>0) then if (v314>v97[v313 + 1 ]) then v91=v99[13 -10 ];else v97[v313 + 3 ]=v314;end elseif (v314<v97[v313 + (773 -(201 + 571)) ]) then v91=v99[3];else v97[v313 + 3 ]=v314;end break;end if (v312==0) then v313=v99[2 + 0 ];v314=v97[v313];v312=1;end end end elseif (v100<=(1220 -(116 + 1022))) then if (v100<=80) then local v211=0;local v212;while true do if (v211==0) then v212=v99[2];do return v97[v212](v21(v97,v212 + 1 ,v99[3]));end break;end end elseif (v100>81) then v97[v99[2]]=v97[v99[3]] + v99[4] ;else v97[v99[2]]=v99[3]~=(0 -0) ;end elseif (v100<=83) then v97[v99[2]]={};elseif (v100==84) then v97[v99[2]][v99[3]]=v99[4];else local v320=0;local v321;while true do if (v320==0) then v321=v99[2];v97[v321](v97[v321 + (4 -3) ]);break;end end end v91=v91 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
